#####################################################
#
#	DomainHealth Config file
#	From version 1.1.3
# 	use it by adding to JAVA_OPTIONS 
#	-Ddh_config_file=<absolute_path_to_this_file>
# 	a) by export JAVA_OPTIONS
#	b) by editing setDomainEnv.sh
#
######################################################

#----------------------
# dh_stats_output_path
#----------------------
#
#Defines the absolute or relative (to server start-up dir) path of the root directory where DH should store captured CSV statistic files

#dh_stats_output_path=./logs/statistics

#----------------------
# dh_always_use_jmxpoll
#----------------------
#
#Forces DH to always use JMX polling to collect metrics rather than allowing DH to decide for itself what to use (which in WLS 10.3+ would otherwise default to using WLDF Harvesting)

#dh_always_use_jmxpoll=false


#----------------------
# dh_query_interval_secs
#----------------------
#
#The gap in seconds between consecutive statistic collections (making this too small could impact server performance)

dh_query_interval_secs=60


#----------------------
# dh_output_log__path
#----------------------
#
#The file where to log all DomainHealth-NG output
#default: $CURRENT_DIR/domanhealth.log
#NOTE : Domainhealth doesn't take care of the directory output

dh_output_log_path=./logs/dh.log

#----------------------
# dh_output_log_level
#----------------------
#
#Set the threshold level. All log events with lower level than the threshold level are ignored by the appender.
#values: OFF,FATAL,ERROR,WARN,INFO,DEBUG,TRACE,ALL
#default: INFO
#

dh_output_log_level=INFO

#------------------------
# dh_csv_retain_num_days
#------------------------
#
# (VERSION 1.1+ ONLY) 
# The number of days to retain captured CSV data log files for (older ones are automatically removed by DomainHealth to help limit file-system capacity consumption) - if the value is equal or less than 0 (zero), DomainHealth will not remove any log files

dh_csv_retain_num_days=10


#----------------------
# dh_backend_output
#----------------------
#
#select where to send statistics, values can be graphite,csvfile,both
# 

#dh_backend_output=csvfile
#dh_backend_output=graphite
dh_backend_output=both

####################
#
# METRIC CONFIG 
#
###################


#----------------------
# dh_metric_type_set
#----------------------
#
# type of metrics to gather 
# you can select from these ones: jvm,core,datasource,jmsdestination,webapp,ejb,hostmachine,extended
# default:  only core if not set


dh_metric_type_set=jvm,core,datasource,jmsdestination,webapp,ejb,extended


#----------------------
# dh_metric_deep_set
#----------------------
#
# set of metrics to gather 
# dh_metric_deep_set=basic/extended/full
# default:  only core if not set


dh_metric_deep_set=full



#----------------------
# dh_component_blacklist
#----------------------
#
#The list of deployed application names which should not have statistics collected or displayed - usually used to prevent WebLogic internal applications from appearing in results

#dh_component_blacklist=myapp1,myotherappB




####################
#
# GRAPHITE CONFIG 
#
###################


#----------------------
# dh_graphite_carbon_host
#----------------------
#
# Graphite storage Layer daemon server host (carbon)
# default: localhost

dh_graphite_carbon_host=localhost


#----------------------
# dh_graphite_carbon_port
#----------------------
#
# Graphite storage Layer daemon server port (carbon) [ Only for TCP connections ]
# default: 2003

dh_graphite_carbon_port=2003

#-----------------------------
# dh_graphite_reconnect_timeout
#-----------------------------
#
# Graphite reconection timeout on connection lost
# default = 60 seconds
# ----------------------------

dh_graphite_reconnect_timeout=60

#-----------------------------
# dh_graphite_force_reconnect_timeout
#-----------------------------
#
# This parameter forced close and after open after some amount of time in seconds or 0 if disabled.
# This parameter could be important on balanced environments enabling load rebalance when several 
# domainhealths are sending metrics to the same graphite backend.
# default = 0 seconds ( disabled ) 
# Tipical values
# * 0 = disabled 
# * 3600 (1h)
# * 10800 (3h)
# * 21600 (6h)
# ----------------------------

dh_graphite_force_reconnect_timeout=0


#-----------------------------
# dh_graphite_send_buffer_size
#-----------------------------
#
# Graphite output buffer size on heavily loaded systems better big buffers 
# but you should increase the max heap 
# default = 1048576 ( 1Mb )
# ----------------------------

dh_graphite_send_buffer_size=33554432



#-----------------------------
# dh_graphite_report_dhstats
#-----------------------------
#
# Send data about Domainhealth data retrieval
# <..>.<DOMAIN_NAME>.dh_stats.servers.<SERVER_INSTANCE_NAME>.retrieve_time
# <..>.<DOMAIN_NAME>.dh_stats.servers.<SERVER_INSTANCE_NAME>.number_metrics
# default = true
# ----------------------------

dh_graphite_report_dhstats=true

#-----------------------------
# dh_graphite_map_server_stats
#-----------------------------
# map status as numbers to graph it
# http://docs.oracle.com/cd/E13222_01/wls/docs90/server_start/server_life.html
# SHUTDOWN(0)  STARTING(1) STANDBY(2) ADMIN(3) RESUMING(4) RUNNING(5)
#           SHUTTING_DOWN(7)          SUSPENDING(6)
#                                  FORCE_SUSPENDING(8)
#
# default = true
# if false domainhealh wont send status info
# -------------------------------------------

dh_graphite_map_server_stats=true



#-----------------------------
# dh_graphite_metric_use_host
#------------------------------
#
# Enable a per host based tree order this is:
#  <HOST_PREFIX>.<HOST>.<HOST_SUFFIX>.<DOMAIN_NAME>.<SERVER_INSTANCE_NAME>.<RESOURCE_TYPE>.<RESOURCE_NAME>.<METRIC_NAME>
# On false a Domain based order are used:
#  <DOMAIN_NAME>.<SERVER_INSTANCE_NAME>.<RESOURCE_TYPE>.<RESOURCE_NAME>.<METRIC_NAME>
# default: true
#----------------------------

dh_graphite_metric_use_host=true

#-------------------------------
# dh_graphite_default_host
# ------------------------------
# 
# use this string as hostname in the <HOST_PREFIX>.<HOST>.<HOST_SUFFIX> metric definition in server instances where 
# not "Machine" is configurated, and always in de ServerAdmin instance.
# this value could be the hostname where the "ServerAdmin" has been installed
# default=locahost
# -----------------------------

dh_graphite_default_host=hostname01

#-------------------------------
# dh_graphite_metric_host_prefix
# ------------------------------
# 
#Puts a prefix in front of hostname ( only if dh_graphite_metric_use_host enabled) so you can order hosts by environtments.
#default= not set
# -----------------------------

dh_graphite_metric_host_prefix=env.appservers

#-------------------------------
# dh_graphite_metric_host_suffix
#-------------------------------
# 
# Puts a suffix after hostname  ( only if dh_graphite_metric_use_host enabled) 
# This is ussualy a producct identifier like "weblogic" "wl" "wl9_3" "wl10" 
#
# default= "wls"
#------------------------------

dh_graphite_metric_host_suffix=wls



#-------------------------------
# dh_graphite_metric_force_domain_name 
#-------------------------------
# 
# fix bug on read weblogic domain name on server startup 
# on some weblogic version  
# 
#------------------------------

dh_graphite_metric_force_domain_name=my_domain






